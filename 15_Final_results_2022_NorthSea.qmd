---
title: "15_Final_results_2022_NorthSea"
format: html
---

* Area: North Sea  
* Data until 2022 (NIVA) and 2019-2022 (HI)      

* NIVA levels and trends from Milkys  
* HI levels and trends from data + linear trends    


* Version ver3, manual changes added afterwards:  
    - EQS for HG in blue mussel added  
    - EQS for PCB7 added (see mail from Merete 8.5.2023)  
    - Species and tissue for blue mussel added  

## Packages + functions  
```{r}

library(dplyr)
library(tidyr)
library(readxl)
library(ggplot2)
library(stringr)
library(knitr)    # for kable

# for JAGS (interval regression)  
library(R2jags)
library(rjags)
library(purrr)

source("interval_lm_qi.R")  # function 'int_linear_qi'  

```

## Set up

```{r}

selected_year <- 2022

```

## Lookup tables  

```{r}

# Lookup file for station names  
lookup_stations <- read.csv("../Milkys2_pc/Files_from_Jupyterhub_2022/Lookup_tables/Lookup_stationorder.csv") %>%
  mutate(Station = paste(STATION_CODE, Station_name)) %>%
  select(STATION_CODE, Station_name, Station, Region)

# Food and EQS limits  
lookup_thresholds_1 <- read_excel("Input_data/Grenseverdier_fra_Sylvia.xlsx") %>%
  rename(EQS_threshold = EQS, Mattrygghet_threshold = Mattrygghet) %>%
  mutate(
    # Set EQS for PCB7
    EQS_threshold = case_when(
      PARAM == "CB_S7" ~ 0.6,
      PARAM == "HG" ~ 0.020,    # the excel file uses ug/kg, not mg/kg
      TRUE ~ EQS_threshold),
    TISSUE_NAME = case_when(
      NIVA_CODE %in% "MU" ~ "Muskel",
      NIVA_CODE %in% "LI" ~ "Lever",
      NIVA_CODE %in% "SB" ~ "Whole soft body")
    )

# Check HARSAT values
# lookup_thresholds_harsat <- read.csv(
#   "https://raw.githubusercontent.com/osparcomm/HARSAT/develop/information/OSPAR_2022/thresholds_biota.csv")
# lookup_thresholds_harsat %>% filter(determinand == "TBSN+") %>% View("harsat")
# lookup_thresholds_harsat %>% filter(determinand == "VDS") %>% View("harsat")

lookup_thresholds_tbt <- data.frame(
  PARAM = "TBT",
  LATIN_NAME = c("Gadus morhua", "Littorina littorea", "Mytilus edulis", 
                 "N. lapillus / L. littorea", "Nucella lapillus"),
  TISSUE_NAME = c("Lever", "Whole soft body", "Whole soft body",
                  "Whole soft body", "Whole soft body"),
  EQS_threshold = 15.2, 
  Mattrygghet_threshold = 15.2
)

lookup_thresholds_vdsi <- data.frame(
  PARAM = "VDSI",
  LATIN_NAME = c("Littorina littorea", "N. lapillus / L. littorea", "Nucella lapillus"),
  TISSUE_NAME = c("Whole soft body", "Whole soft body", "Whole soft body"),
  EQS_threshold = 2, 
  Mattrygghet_threshold = NA
)

lookup_thresholds <- bind_rows(
  lookup_thresholds_1,
  lookup_thresholds_tbt,
  lookup_thresholds_vdsi
)


lookup_coordinates_1 <- read.csv("Input_data/lookup_coordinates.csv")

lookup_coordinates_hi <- read.csv("Data_export/2022 report North Sea/Results_North_sea_cod_HI_stations.csv") %>%
  mutate(
    Station_name = paste(STATION_CODE, "grader"),
    Station_short = case_when(
      STATION_CODE == "Nordsjøen N for 59" ~ "Nordsjøen (N)",
      STATION_CODE == "Nordsjøen S for 59" ~ "Nordsjøen (S)")
  )

lookup_coordinates <- lookup_coordinates_1 %>%
  bind_rows(lookup_coordinates_hi)

# From Milkys2
# lookup_eqs <- read.csv("../Milkys2_pc/Files_from_Jupyterhub_2022/Lookup_tables/Lookup_EQS_limits.csv") %>%
#   filter(Basis %in% c("WW", "WWa")) %>%
#   select(-Long_name, -Kommentar) %>%
#   rename(EQS = Limit)

lookup_proref <- readRDS("Input_data/lookup_proref.rds")

# From Milkys2
# lookup_proref <- read.csv("../Milkys2_pc/Files_from_Jupyterhub_2022/Lookup_tables/Lookup_proref_ELU.csv") %>%
#   filter(Basis %in% c("WW", "WWa")) %>%
#   select(PARAM, LATIN_NAME, TISSUE_NAME, Basis, Proref) 

lookup_old_mussel <- read.csv2(
  "Data_export/2021 report North Sea blue mussel/MytiEdu_Snegl_2020_ver4.csv")
lookup_old_cod <- read.csv(
  "Data_export/2021 report North Sea blue mussel/GaduMor_2020data_ver01.csv")

```

## Data


### NIVA data  

* Includes 20B   
* Includes sums (CB_S7, BDE6S)
* Lacking PROREF classification     
* Lacking EQS classification  
* Lacking HI cod data 


```{r}

dat_all <- readRDS("../Milkys2_pc/Files_from_Jupyterhub_2022/Raw_data/dat_raw5.rds") %>%
  left_join(lookup_stations %>% select(STATION_CODE, Station), by = "STATION_CODE") %>%
  rename(MYEAR = x) %>%
  mutate(
    VALUE_lo = case_when(
      is.na(Flag) ~ VALUE,
      !is.na(Flag) ~ 0),
  )

# xtabs(~transform, dat_all)
# xtabs(~PARAM + transform, dat_all)

dat_trend_all_01 <- readRDS("../Milkys2_pc/Files_from_Jupyterhub_2022/Trend_data/dat_trend.rds") %>%
    left_join(lookup_stations %>% select(STATION_CODE, Station), by = "STATION_CODE") %>%
    mutate(
      Perc_change = round((exp(-y_mean)-1)*100, 1),
      D_year = selected_year - First_year,
      Perc_annual = round((exp(-y_mean/D_year)-1)*100, 1),
      Perc_annual_lo = round((exp(-y_q2.5/D_year)-1)*100, 1),
      Perc_annual_hi = round((exp(-y_q97.5/D_year)-1)*100, 1)
    )

dat_trend_all_02 <- dat_trend_all_01 %>%
  mutate(
    Basis_selected = case_when(
      PARAM %in% "HG" ~ "WWa",
      TRUE ~ "WW")
  ) %>%
  filter(
    Trend_type == "short",
    Basis == Basis_selected) 

# table(subset(dat_trend_all_01, PARAM == "HG")$Basis)
# table(subset(dat_trend_all_02, PARAM == "HG")$Basis)
# table(dat_trend_all_02$Basis)

```

### HI data

* Data from HI (a.k.a. NIFES in the old days)

```{r}

dat_medians_hi <- read.csv("Data_export/2022 report North Sea/Results_North_sea_cod_HI_medians.csv") %>%
  mutate(
    TISSUE_NAME = case_when(
      Organ %in% "Filet" ~ "Muskel",
      Organ %in% "Lever" ~ "Lever"),
    LATIN_NAME = "Gadus morhua",
    Conc = VALUE_WW_lo
  ) 

dat_trends_hi <- read.csv("Data_export/2022 report North Sea/Results_North_sea_cod_HI_trends.csv") %>%
  mutate(
    TISSUE_NAME = case_when(
      Organ %in% "Filet" ~ "Muskel",
      Organ %in% "Lever" ~ "Lever"),
    LATIN_NAME = "Gadus morhua",
    Basis_selected = "WW"
  ) 

```

### Medians

* Using lower bound for assessment of levels

```{r}

dat_medians_1 <- dat_all %>%
  group_by(PARAM, STATION_CODE, LATIN_NAME, TISSUE_NAME, MYEAR) %>%
  summarise(
    Conc = median(VALUE_lo), .groups = "drop"
  )

dat_medians_1b <- dat_medians_1 %>%
  bind_rows(
    dat_medians_hi %>% select(PARAM, STATION_CODE, LATIN_NAME, TISSUE_NAME, MYEAR, Conc)
  )

dat_medians_2 <- dat_medians_1b %>%
  left_join(
    lookup_thresholds %>% select(PARAM, LATIN_NAME, TISSUE_NAME, EQS_threshold, Mattrygghet_threshold),
    by = c("PARAM", "LATIN_NAME", "TISSUE_NAME"))

dat_medians_3 <- dat_medians_2 %>%
  left_join(
    lookup_proref %>% select(PARAM, LATIN_NAME, PROREF),
    by = c("PARAM", "LATIN_NAME"))

dat_medians_4 <- dat_medians_3 %>%
  mutate(
    EQS = case_when(
      Conc/EQS_threshold <= 1 ~ 1,
      Conc/EQS_threshold > 1 ~ 2),
    Mattrygghet = case_when(
      Conc/Mattrygghet_threshold <= 1 ~ 1,
      Conc/Mattrygghet_threshold > 1 ~ 2),
  CLASS_proref = case_when(
    Conc/PROREF < 1 ~ 1,
    Conc/PROREF < 2 ~ 2,
    Conc/PROREF < 10 ~ 3,
    Conc/PROREF >= 10 ~4)
  )

```

### Trend data NIVA + HI  

```{r}

dat_trend_all_03 <- dat_trend_all_02 %>%
  bind_rows(
    dat_trends_hi %>%
      select(PARAM, LATIN_NAME, TISSUE_NAME, STATION_CODE, Trend_string, Perc_annual)
  )

```





## Blue mussel and snails  

### Select rows  

* We normally select the last year  
    - but if median concentration is under LOQ, the last year with data over LOQ is picked  
    - if no year has data over LOQ the last 10 years, no data  

```{r}

dat_medians_sel_1 <- dat_medians_4 %>%
  filter(
    STATION_CODE %in% unique(lookup_old_mussel$STATION_CODE),
    PARAM %in% unique(lookup_old_mussel$PARAM),
    MYEAR >= (selected_year - 10),
    !(PARAM != "VDSI" & Conc == 0)    
  ) %>% 
  # Get last year with data over LOQ
  group_by(STATION_CODE, PARAM) %>%
  mutate(Last_year_over_LOQ = max(MYEAR)) %>% 
  ungroup() %>%
  # Pick only that year
  filter(MYEAR == Last_year_over_LOQ) %>%
  select(-MYEAR) %>%
  # Add station name and coordinates
  left_join(
    lookup_coordinates %>% select(STATION_CODE, Station_short, Lat, Long),
    by = "STATION_CODE"
  )

```



### Add trends and last year  

* last year is only for comparison with the present  

```{r}

df_old <- lookup_old_mussel %>%
  select(STATION_CODE, PARAM, trend, KLASSE, EQS, Mattrygghet)
names(df_old)[-(1:2)] <- paste0(names(df_old)[-(1:2)], "_old")
# df_old

dat_indicator <- dat_medians_sel_1 %>%
  left_join(
    dat_trend_all_03 %>% select(PARAM, LATIN_NAME, TISSUE_NAME, STATION_CODE, Year_pick, Trend_string, Perc_annual),
    by = c("PARAM", "STATION_CODE", "LATIN_NAME", "TISSUE_NAME")
  ) %>%
  left_join(
    df_old, by = c("PARAM", "STATION_CODE") 
  )

dat_indicator %>%
  select(STATION_CODE, PARAM, CLASS_proref, KLASSE_old)
# CD I301, I304
# HCB 56A fra 3 til 1

dat_indicator %>%
  select(STATION_CODE, PARAM, EQS, EQS_old)


```


### Saving  
```{r}

save_folder <- "Data_export/2022 report North Sea"
save_filename_csv <- "Indicators_North_sea_mussels_2022.csv"
save_filename_xlsx <- sub(".csv", "_fromR.xlsx", save_filename_csv, fixed = TRUE)

readr::write_csv(dat_indicator, paste0(save_folder, "/", save_filename_csv))
writexl::write_xlsx(dat_indicator, paste0(save_folder, "/", save_filename_xlsx))
  
# dat_indicator <- read.csv(paste0(save_folder, "/", save_filename_csv))

```


### Check 
```{r}

dat_indicator %>%
  select(STATION_CODE, Long, Lat, PARAM, EQS, Mattrygghet, CLASS_proref, Trend_string)

```


## Cod    

### Select rows  

* We normally select the last year  
    - but if median concentration is under LOQ, the last year with data over LOQ is picked  
    - if no year has data over LOQ the last 10 years, no data  

```{r}

stations <- c(
  unique(lookup_old_cod$STATION_CODE),    # lookup_old_mussel -> lookup_old_cod
  unique(dat_medians_hi$STATION_CODE)
)

dat_medians_sel_1 <- dat_medians_4 %>%
  filter(
    STATION_CODE %in% stations,
    PARAM %in% unique(lookup_old_cod$PARAM),                  # lookup_old_mussel -> lookup_old_cod
    MYEAR >= (selected_year - 10),
    !(PARAM != "VDSI" & Conc == 0)    
  ) %>%
  # Get last year with data over LOQ
  group_by(STATION_CODE, PARAM) %>%
  mutate(Last_year_over_LOQ = max(MYEAR)) %>%
  ungroup() %>%
  # Pick only that year
  filter(MYEAR == Last_year_over_LOQ) %>%
  select(-MYEAR) %>%
  # Add station name and coordinates
  left_join(
    lookup_coordinates %>% select(STATION_CODE, Station_short, Lat, Long),
    by = "STATION_CODE"
  )

```

### Add comparison with last year  

```{r}

df_old <- lookup_old_cod %>%
  select(STATION_CODE, PARAM, trend, KLASSE, EQS, Mattrygghet)
names(df_old)[-(1:2)] <- paste0(names(df_old)[-(1:2)], "_old")
# df_old


dat_indicator <- dat_medians_sel_1 %>%
  left_join(
    dat_trend_all_03 %>% select(PARAM, LATIN_NAME, TISSUE_NAME, STATION_CODE, Year_pick, Trend_string, Perc_annual),
    by = c("PARAM", "STATION_CODE", "LATIN_NAME", "TISSUE_NAME")
  ) %>%
  left_join(
    df_old, by = c("PARAM", "STATION_CODE") 
  )

dat_indicator %>%
  select(STATION_CODE, PARAM, CLASS_proref, KLASSE_old)
# CD I301, I304
# HCB 56A fra 3 til 1

dat_indicator %>%
  select(STATION_CODE, PARAM, EQS, EQS_old)


```


### Saving  
```{r}

save_folder <- "Data_export/2022 report North Sea"
save_filename_csv <- "Indicators_North_sea_cod_2022.csv"
save_filename_xlsx <- sub(".csv", "_fromR.xlsx", save_filename_csv, fixed = TRUE)

readr::write_csv(dat_indicator, paste0(save_folder, "/", save_filename_csv))
writexl::write_xlsx(dat_indicator, paste0(save_folder, "/", save_filename_xlsx))
  
# dat_indicator <- read.csv(paste0(save_folder, "/", save_filename_csv))

```


### Check 
```{r}

dat_indicator %>%
  select(STATION_CODE, Long, Lat, PARAM, EQS, Mattrygghet, CLASS_proref, Trend_string)

```

